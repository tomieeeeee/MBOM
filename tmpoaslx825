digraph G {

    // Attributes
    graph [ overlap = "scalexy", fontname = "Verdana", fontsize = "7", fontcolor = "#0000007f", label = "Generated by Python Call Graph v1.0.1\nhttp://pycallgraph.slowchop.com" ];
    node [ fontname = "Verdana", fontsize = "7", fontcolor = "#000000ff", style = "filled", shape = "rect" ];
    edge [ fontname = "Verdana", fontsize = "7", fontcolor = "#000000ff" ];

    // Groups
    subgraph "cluster___main__" { "__main__"; label = "__main__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_main" { "main"; label = "main"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_utils" { "utils.get_exp_data_path.get_exp_data_path" "utils.Logger.Logger.__init__" "utils.Logger.<listcomp>"; label = "utils"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__handle_fromlist" { "_handle_fromlist"; label = "_handle_fromlist"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__call_with_frames_removed" { "_call_with_frames_removed"; label = "_call_with_frames_removed"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_and_load" { "_find_and_load"; label = "_find_and_load"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ModuleLockManager" { "_ModuleLockManager.__init__" "_ModuleLockManager.__enter__" "_ModuleLockManager.__exit__"; label = "_ModuleLockManager"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__get_module_lock" { "_get_module_lock"; label = "_get_module_lock"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ModuleLock" { "_ModuleLock.__init__" "_ModuleLock.acquire" "_ModuleLock.release"; label = "_ModuleLock"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_and_load_unlocked" { "_find_and_load_unlocked"; label = "_find_and_load_unlocked"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_spec" { "_find_spec"; label = "_find_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ImportLockContext" { "_ImportLockContext.__enter__" "_ImportLockContext.__exit__"; label = "_ImportLockContext"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_find_spec" { "find_spec"; label = "find_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__get_spec" { "_get_spec"; label = "_get_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_importer_cache" { "_path_importer_cache"; label = "_path_importer_cache"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FileFinder" { "FileFinder.find_spec" "FileFinder._get_spec" "FileFinder.__init__" "FileFinder._fill_cache"; label = "FileFinder"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_stat" { "_path_stat"; label = "_path_stat"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__relax_case" { "_relax_case"; label = "_relax_case"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_join" { "_path_join"; label = "_path_join"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<listcomp>" { "<listcomp>"; label = "<listcomp>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__verbose_message" { "_verbose_message"; label = "_verbose_message"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ModuleSpec" { "ModuleSpec.__init__" "ModuleSpec.parent" "ModuleSpec.has_location" "ModuleSpec.cached"; label = "ModuleSpec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__find_spec_legacy" { "_find_spec_legacy"; label = "_find_spec_legacy"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_cb" { "cb"; label = "cb"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_isfile" { "_path_isfile"; label = "_path_isfile"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_is_mode_type" { "_path_is_mode_type"; label = "_path_is_mode_type"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SourceFileLoader" { "SourceFileLoader.__init__" "SourceFileLoader.create_module" "SourceFileLoader.exec_module" "SourceFileLoader.get_code" "SourceFileLoader._check_name_wrapper" "SourceFileLoader.get_filename" "SourceFileLoader.path_stats" "SourceFileLoader.get_data"; label = "SourceFileLoader"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_spec_from_file_location" { "spec_from_file_location"; label = "spec_from_file_location"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__load_unlocked" { "_load_unlocked"; label = "_load_unlocked"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_module_from_spec" { "module_from_spec"; label = "module_from_spec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__new_module" { "_new_module"; label = "_new_module"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__init_module_attrs" { "_init_module_attrs"; label = "_init_module_attrs"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__get_cached" { "_get_cached"; label = "_get_cached"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_cache_from_source" { "cache_from_source"; label = "cache_from_source"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_split" { "_path_split"; label = "_path_split"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__installed_safely" { "_installed_safely.__init__" "_installed_safely.__enter__" "_installed_safely.__exit__"; label = "_installed_safely"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__validate_bytecode_header" { "_validate_bytecode_header"; label = "_validate_bytecode_header"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__r_long" { "_r_long"; label = "_r_long"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__compile_bytecode" { "_compile_bytecode"; label = "_compile_bytecode"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_hooks" { "_path_hooks"; label = "_path_hooks"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_path_hook_for_FileFinder" { "path_hook_for_FileFinder"; label = "path_hook_for_FileFinder"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__path_isdir" { "_path_isdir"; label = "_path_isdir"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<genexpr>" { "<genexpr>"; label = "<genexpr>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<setcomp>" { "<setcomp>"; label = "<setcomp>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__lock_unlock_module" { "_lock_unlock_module"; label = "_lock_unlock_module"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ExtensionFileLoader" { "ExtensionFileLoader.__init__" "ExtensionFileLoader.create_module" "ExtensionFileLoader.exec_module"; label = "ExtensionFileLoader"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__load" { "_load"; label = "_load"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<module>" { "<module>"; label = "<module>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FileAndLine" { "FileAndLine"; label = "FileAndLine"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ExportedApiAttributes" { "ExportedApiAttributes"; label = "ExportedApiAttributes"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster___new__" { "__new__"; label = "__new__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_DeprecatedArgSpec" { "DeprecatedArgSpec"; label = "DeprecatedArgSpec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ContextSwitch" { "ContextSwitch"; label = "ContextSwitch"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_LogicalDevice" { "LogicalDevice"; label = "LogicalDevice"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_VirtualDeviceConfiguration" { "VirtualDeviceConfiguration"; label = "VirtualDeviceConfiguration"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_PhysicalDevice" { "PhysicalDevice"; label = "PhysicalDevice"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ParseTag" { "_ParseTag"; label = "_ParseTag"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_spec_from_loader" { "spec_from_loader"; label = "spec_from_loader"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_type" { "type._requires_builtin_wrapper" "type.create_module" "type.exec_module"; label = "type"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_is_package" { "is_package"; label = "is_package"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_IndexedSlicesValue" { "IndexedSlicesValue"; label = "IndexedSlicesValue"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseTensorValue" { "SparseTensorValue"; label = "SparseTensorValue"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_BroadcastGradientArgs" { "BroadcastGradientArgs"; label = "BroadcastGradientArgs"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FakeQuantWithMinMaxVarsGradient" { "FakeQuantWithMinMaxVarsGradient"; label = "FakeQuantWithMinMaxVarsGradient"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FakeQuantWithMinMaxVarsPerChannelGradient" { "FakeQuantWithMinMaxVarsPerChannelGradient"; label = "FakeQuantWithMinMaxVarsPerChannelGradient"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ListDiff" { "ListDiff"; label = "ListDiff"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizeV2" { "QuantizeV2"; label = "QuantizeV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConcat" { "QuantizedConcat"; label = "QuantizedConcat"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedInstanceNorm" { "QuantizedInstanceNorm"; label = "QuantizedInstanceNorm"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedReshape" { "QuantizedReshape"; label = "QuantizedReshape"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Unique" { "Unique"; label = "Unique"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_UniqueV2" { "UniqueV2"; label = "UniqueV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_UniqueWithCounts" { "UniqueWithCounts"; label = "UniqueWithCounts"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_UniqueWithCountsV2" { "UniqueWithCountsV2"; label = "UniqueWithCountsV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizeDownAndShrinkRange" { "QuantizeDownAndShrinkRange"; label = "QuantizeDownAndShrinkRange"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedAdd" { "QuantizedAdd"; label = "QuantizedAdd"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedMatMul" { "QuantizedMatMul"; label = "QuantizedMatMul"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedMul" { "QuantizedMul"; label = "QuantizedMul"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RequantizationRange" { "RequantizationRange"; label = "RequantizationRange"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RequantizationRangePerChannel" { "RequantizationRangePerChannel"; label = "RequantizationRangePerChannel"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Requantize" { "Requantize"; label = "Requantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RequantizePerChannel" { "RequantizePerChannel"; label = "RequantizePerChannel"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_BarrierTakeMany" { "BarrierTakeMany"; label = "BarrierTakeMany"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_MapUnstageNoKey" { "MapUnstageNoKey"; label = "MapUnstageNoKey"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_OrderedMapUnstageNoKey" { "OrderedMapUnstageNoKey"; label = "OrderedMapUnstageNoKey"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseAccumulatorTakeGradient" { "SparseAccumulatorTakeGradient"; label = "SparseAccumulatorTakeGradient"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorArrayConcat" { "TensorArrayConcat"; label = "TensorArrayConcat"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorArrayConcatV2" { "TensorArrayConcatV2"; label = "TensorArrayConcatV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorArrayConcatV3" { "TensorArrayConcatV3"; label = "TensorArrayConcatV3"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorArrayGradV3" { "TensorArrayGradV3"; label = "TensorArrayGradV3"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorArrayGradWithShape" { "TensorArrayGradWithShape"; label = "TensorArrayGradWithShape"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorArrayV3" { "TensorArrayV3"; label = "TensorArrayV3"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_BatchNormWithGlobalNormalizationGrad" { "BatchNormWithGlobalNormalizationGrad"; label = "BatchNormWithGlobalNormalizationGrad"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FractionalAvgPool" { "FractionalAvgPool"; label = "FractionalAvgPool"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FractionalMaxPool" { "FractionalMaxPool"; label = "FractionalMaxPool"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FusedBatchNorm" { "FusedBatchNorm"; label = "FusedBatchNorm"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FusedBatchNormGrad" { "FusedBatchNormGrad"; label = "FusedBatchNormGrad"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FusedBatchNormGradV2" { "FusedBatchNormGradV2"; label = "FusedBatchNormGradV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FusedBatchNormGradV3" { "FusedBatchNormGradV3"; label = "FusedBatchNormGradV3"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FusedBatchNormV2" { "FusedBatchNormV2"; label = "FusedBatchNormV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FusedBatchNormV3" { "FusedBatchNormV3"; label = "FusedBatchNormV3"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_MaxPoolWithArgmax" { "MaxPoolWithArgmax"; label = "MaxPoolWithArgmax"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedAvgPool" { "QuantizedAvgPool"; label = "QuantizedAvgPool"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedBatchNormWithGlobalNormalization" { "QuantizedBatchNormWithGlobalNormalization"; label = "QuantizedBatchNormWithGlobalNormalization"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedBiasAdd" { "QuantizedBiasAdd"; label = "QuantizedBiasAdd"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2D" { "QuantizedConv2D"; label = "QuantizedConv2D"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DAndRelu" { "QuantizedConv2DAndRelu"; label = "QuantizedConv2DAndRelu"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DAndReluAndRequantize" { "QuantizedConv2DAndReluAndRequantize"; label = "QuantizedConv2DAndReluAndRequantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DAndRequantize" { "QuantizedConv2DAndRequantize"; label = "QuantizedConv2DAndRequantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DPerChannel" { "QuantizedConv2DPerChannel"; label = "QuantizedConv2DPerChannel"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DWithBias" { "QuantizedConv2DWithBias"; label = "QuantizedConv2DWithBias"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DWithBiasAndRelu" { "QuantizedConv2DWithBiasAndRelu"; label = "QuantizedConv2DWithBiasAndRelu"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DWithBiasAndReluAndRequantize" { "QuantizedConv2DWithBiasAndReluAndRequantize"; label = "QuantizedConv2DWithBiasAndReluAndRequantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DWithBiasAndRequantize" { "QuantizedConv2DWithBiasAndRequantize"; label = "QuantizedConv2DWithBiasAndRequantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DWithBiasSignedSumAndReluAndRequantize" { "QuantizedConv2DWithBiasSignedSumAndReluAndRequantize"; label = "QuantizedConv2DWithBiasSignedSumAndReluAndRequantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DWithBiasSumAndRelu" { "QuantizedConv2DWithBiasSumAndRelu"; label = "QuantizedConv2DWithBiasSumAndRelu"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedConv2DWithBiasSumAndReluAndRequantize" { "QuantizedConv2DWithBiasSumAndReluAndRequantize"; label = "QuantizedConv2DWithBiasSumAndReluAndRequantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedDepthwiseConv2D" { "QuantizedDepthwiseConv2D"; label = "QuantizedDepthwiseConv2D"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedDepthwiseConv2DWithBias" { "QuantizedDepthwiseConv2DWithBias"; label = "QuantizedDepthwiseConv2DWithBias"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedDepthwiseConv2DWithBiasAndRelu" { "QuantizedDepthwiseConv2DWithBiasAndRelu"; label = "QuantizedDepthwiseConv2DWithBiasAndRelu"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize" { "QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize"; label = "QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedMaxPool" { "QuantizedMaxPool"; label = "QuantizedMaxPool"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedRelu" { "QuantizedRelu"; label = "QuantizedRelu"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedRelu6" { "QuantizedRelu6"; label = "QuantizedRelu6"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_QuantizedReluX" { "QuantizedReluX"; label = "QuantizedReluX"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SoftmaxCrossEntropyWithLogits" { "SoftmaxCrossEntropyWithLogits"; label = "SoftmaxCrossEntropyWithLogits"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseSoftmaxCrossEntropyWithLogits" { "SparseSoftmaxCrossEntropyWithLogits"; label = "SparseSoftmaxCrossEntropyWithLogits"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TopK" { "TopK"; label = "TopK"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TopKV2" { "TopKV2"; label = "TopKV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_DeserializeManySparse" { "DeserializeManySparse"; label = "DeserializeManySparse"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_DeserializeSparse" { "DeserializeSparse"; label = "DeserializeSparse"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseAdd" { "SparseAdd"; label = "SparseAdd"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseAddGrad" { "SparseAddGrad"; label = "SparseAddGrad"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseConcat" { "SparseConcat"; label = "SparseConcat"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseCross" { "SparseCross"; label = "SparseCross"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseFillEmptyRows" { "SparseFillEmptyRows"; label = "SparseFillEmptyRows"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseFillEmptyRowsGrad" { "SparseFillEmptyRowsGrad"; label = "SparseFillEmptyRowsGrad"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseReduceMaxSparse" { "SparseReduceMaxSparse"; label = "SparseReduceMaxSparse"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseReduceSumSparse" { "SparseReduceSumSparse"; label = "SparseReduceSumSparse"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseReorder" { "SparseReorder"; label = "SparseReorder"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseReshape" { "SparseReshape"; label = "SparseReshape"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseSlice" { "SparseSlice"; label = "SparseSlice"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseSparseMaximum" { "SparseSparseMaximum"; label = "SparseSparseMaximum"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseSparseMinimum" { "SparseSparseMinimum"; label = "SparseSparseMinimum"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseSplit" { "SparseSplit"; label = "SparseSplit"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TakeManySparseFromTensorsMap" { "TakeManySparseFromTensorsMap"; label = "TakeManySparseFromTensorsMap"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Merge" { "Merge"; label = "Merge"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RefMerge" { "RefMerge"; label = "RefMerge"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RefSwitch" { "RefSwitch"; label = "RefSwitch"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Switch" { "Switch"; label = "Switch"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorListConcat" { "TensorListConcat"; label = "TensorListConcat"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorListConcatV2" { "TensorListConcatV2"; label = "TensorListConcatV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TensorListPopBack" { "TensorListPopBack"; label = "TensorListPopBack"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ReaderRead" { "ReaderRead"; label = "ReaderRead"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ReaderReadUpTo" { "ReaderReadUpTo"; label = "ReaderReadUpTo"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ReaderReadUpToV2" { "ReaderReadUpToV2"; label = "ReaderReadUpToV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ReaderReadV2" { "ReaderReadV2"; label = "ReaderReadV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TrackableReference" { "TrackableReference"; label = "TrackableReference"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__DeferredSlotVariableRestoration" { "_DeferredSlotVariableRestoration"; label = "_DeferredSlotVariableRestoration"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__SlotVariableRestoration" { "_SlotVariableRestoration"; label = "_SlotVariableRestoration"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_BatchSelfAdjointEigV2" { "BatchSelfAdjointEigV2"; label = "BatchSelfAdjointEigV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_BatchSvd" { "BatchSvd"; label = "BatchSvd"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_LogMatrixDeterminant" { "LogMatrixDeterminant"; label = "LogMatrixDeterminant"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Lu" { "Lu"; label = "Lu"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Qr" { "Qr"; label = "Qr"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SelfAdjointEigV2" { "SelfAdjointEigV2"; label = "SelfAdjointEigV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Svd" { "Svd"; label = "Svd"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_VSpace" { "VSpace"; label = "VSpace"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_MatchDType" { "MatchDType"; label = "MatchDType"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ParseExample" { "ParseExample"; label = "ParseExample"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ParseSequenceExample" { "ParseSequenceExample"; label = "ParseSequenceExample"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ParseSingleExample" { "ParseSingleExample"; label = "ParseSingleExample"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ParseSingleSequenceExample" { "ParseSingleSequenceExample"; label = "ParseSingleSequenceExample"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_StringSplit" { "StringSplit"; label = "StringSplit"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_StringSplitV2" { "StringSplitV2"; label = "StringSplitV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_UnicodeDecode" { "UnicodeDecode"; label = "UnicodeDecode"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_UnicodeDecodeWithOffsets" { "UnicodeDecodeWithOffsets"; label = "UnicodeDecodeWithOffsets"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TraceContext" { "TraceContext"; label = "TraceContext"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RaggedTensorFromVariant" { "RaggedTensorFromVariant"; label = "RaggedTensorFromVariant"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RaggedTensorToSparse" { "RaggedTensorToSparse"; label = "RaggedTensorToSparse"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RaggedRange" { "RaggedRange"; label = "RaggedRange"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RaggedGather" { "RaggedGather"; label = "RaggedGather"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_VarLenFeature" { "VarLenFeature"; label = "VarLenFeature"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_SparseFeature" { "SparseFeature"; label = "SparseFeature"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FixedLenFeature" { "FixedLenFeature"; label = "FixedLenFeature"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_FixedLenSequenceFeature" { "FixedLenSequenceFeature"; label = "FixedLenSequenceFeature"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ArgInfo" { "ArgInfo"; label = "ArgInfo"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__RaggedTensorComponents" { "_RaggedTensorComponents"; label = "_RaggedTensorComponents"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_AnonymousIteratorV2" { "AnonymousIteratorV2"; label = "AnonymousIteratorV2"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_CacheKey" { "CacheKey"; label = "CacheKey"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__InputMutation" { "_InputMutation"; label = "_InputMutation"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__ControlMutation" { "_ControlMutation"; label = "_ControlMutation"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }

    // Nodes
    "__main__" [color = "#e5e5e5ff", label = "__main__\ncalls: 1\ntime: 0.000000s"];
    "main" [color = "#e5e5e5ff", label = "main\ncalls: 1\ntime: 0.000000s"];
    "utils.get_exp_data_path.get_exp_data_path" [color = "#e5e5e5ff", label = "utils.get_exp_data_path.get_exp_data_path\ncalls: 1\ntime: 0.000000s"];
    "utils.Logger.Logger.__init__" [color = "#e5e5e5ff", label = "utils.Logger.Logger.__init__\ncalls: 1\ntime: 0.000000s"];
    "utils.Logger.<listcomp>" [color = "#e5e5e5ff", label = "utils.Logger.<listcomp>\ncalls: 1\ntime: 0.000000s"];
    "_handle_fromlist" [color = "#ce59e5ff", label = "_handle_fromlist\ncalls: 2,853\ntime: 4.910960s"];
    "_call_with_frames_removed" [color = "#e53fc9ff", label = "_call_with_frames_removed\ncalls: 474\ntime: 11.786870s"];
    "_find_and_load" [color = "#a081e5ff", label = "_find_and_load\ncalls: 269\ntime: 7.156118s"];
    "_ModuleLockManager.__init__" [color = "#dee4e5ff", label = "_ModuleLockManager.__init__\ncalls: 270\ntime: 0.000000s"];
    "_ModuleLockManager.__enter__" [color = "#dee4e5ff", label = "_ModuleLockManager.__enter__\ncalls: 270\ntime: 0.010655s"];
    "_get_module_lock" [color = "#d4e1e5ff", label = "_get_module_lock\ncalls: 617\ntime: 0.004591s"];
    "_ModuleLock.__init__" [color = "#dee4e5ff", label = "_ModuleLock.__init__\ncalls: 268\ntime: 0.000592s"];
    "_ModuleLock.acquire" [color = "#d4e1e5ff", label = "_ModuleLock.acquire\ncalls: 617\ntime: 0.003045s"];
    "_find_and_load_unlocked" [color = "#a081e5ff", label = "_find_and_load_unlocked\ncalls: 269\ntime: 7.127321s"];
    "_find_spec" [color = "#dce4e5ff", label = "_find_spec\ncalls: 267\ntime: 0.126575s"];
    "_ImportLockContext.__enter__" [color = "#cfdfe5ff", label = "_ImportLockContext.__enter__\ncalls: 803\ntime: 0.001001s"];
    "find_spec" [color = "#cedee5ff", label = "find_spec\ncalls: 799\ntime: 0.097465s"];
    "_ImportLockContext.__exit__" [color = "#cfdfe5ff", label = "_ImportLockContext.__exit__\ncalls: 803\ntime: 0.001000s"];
    "_get_spec" [color = "#dde4e5ff", label = "_get_spec\ncalls: 266\ntime: 0.088175s"];
    "_path_importer_cache" [color = "#dde4e5ff", label = "_path_importer_cache\ncalls: 299\ntime: 0.008184s"];
    "FileFinder.find_spec" [color = "#dce4e5ff", label = "FileFinder.find_spec\ncalls: 284\ntime: 0.069826s"];
    "_path_stat" [color = "#ccdde5ff", label = "_path_stat\ncalls: 910\ntime: 0.024567s"];
    "_relax_case" [color = "#dde4e5ff", label = "_relax_case\ncalls: 284\ntime: 0.000000s"];
    "_path_join" [color = "#bed1e5ff", label = "_path_join\ncalls: 1,454\ntime: 0.015070s"];
    "<listcomp>" [color = "#bed1e5ff", label = "<listcomp>\ncalls: 1,454\ntime: 0.001994s"];
    "_verbose_message" [color = "#bbcee5ff", label = "_verbose_message\ncalls: 1,570\ntime: 0.000993s"];
    "ModuleSpec.__init__" [color = "#dee4e5ff", label = "ModuleSpec.__init__\ncalls: 268\ntime: 0.001000s"];
    "_find_spec_legacy" [color = "#e5e5e5ff", label = "_find_spec_legacy\ncalls: 4\ntime: 0.000000s"];
    "_ModuleLockManager.__exit__" [color = "#dee4e5ff", label = "_ModuleLockManager.__exit__\ncalls: 254\ntime: 0.002060s"];
    "_ModuleLock.release" [color = "#d5e2e5ff", label = "_ModuleLock.release\ncalls: 601\ntime: 0.001067s"];
    "cb" [color = "#dee4e5ff", label = "cb\ncalls: 253\ntime: 0.001071s"];
    "_path_isfile" [color = "#dce4e5ff", label = "_path_isfile\ncalls: 330\ntime: 0.017470s"];
    "_path_is_mode_type" [color = "#dbe4e5ff", label = "_path_is_mode_type\ncalls: 364\ntime: 0.017470s"];
    "FileFinder._get_spec" [color = "#dee4e5ff", label = "FileFinder._get_spec\ncalls: 262\ntime: 0.006972s"];
    "SourceFileLoader.__init__" [color = "#dee4e5ff", label = "SourceFileLoader.__init__\ncalls: 262\ntime: 0.000000s"];
    "spec_from_file_location" [color = "#dee4e5ff", label = "spec_from_file_location\ncalls: 262\ntime: 0.003971s"];
    "_load_unlocked" [color = "#9f83e5ff", label = "_load_unlocked\ncalls: 264\ntime: 7.025179s"];
    "module_from_spec" [color = "#dde4e5ff", label = "module_from_spec\ncalls: 264\ntime: 0.067739s"];
    "SourceFileLoader.create_module" [color = "#dee4e5ff", label = "SourceFileLoader.create_module\ncalls: 262\ntime: 0.000000s"];
    "_new_module" [color = "#dee4e5ff", label = "_new_module\ncalls: 262\ntime: 0.000000s"];
    "_init_module_attrs" [color = "#dde4e5ff", label = "_init_module_attrs\ncalls: 264\ntime: 0.037803s"];
    "ModuleSpec.parent" [color = "#dee4e5ff", label = "ModuleSpec.parent\ncalls: 270\ntime: 0.001000s"];
    "ModuleSpec.has_location" [color = "#dee4e5ff", label = "ModuleSpec.has_location\ncalls: 264\ntime: 0.000000s"];
    "ModuleSpec.cached" [color = "#d7e2e5ff", label = "ModuleSpec.cached\ncalls: 524\ntime: 0.024784s"];
    "_get_cached" [color = "#dee4e5ff", label = "_get_cached\ncalls: 262\ntime: 0.021542s"];
    "cache_from_source" [color = "#d7e2e5ff", label = "cache_from_source\ncalls: 524\ntime: 0.029601s"];
    "_path_split" [color = "#d7e2e5ff", label = "_path_split\ncalls: 524\ntime: 0.014521s"];
    "_installed_safely.__init__" [color = "#dee4e5ff", label = "_installed_safely.__init__\ncalls: 264\ntime: 0.000000s"];
    "_installed_safely.__enter__" [color = "#dee4e5ff", label = "_installed_safely.__enter__\ncalls: 264\ntime: 0.000000s"];
    "SourceFileLoader.exec_module" [color = "#9e84e5ff", label = "SourceFileLoader.exec_module\ncalls: 262\ntime: 6.944823s"];
    "SourceFileLoader.get_code" [color = "#dde4e5ff", label = "SourceFileLoader.get_code\ncalls: 262\ntime: 0.084510s"];
    "SourceFileLoader._check_name_wrapper" [color = "#dee4e5ff", label = "SourceFileLoader._check_name_wrapper\ncalls: 262\ntime: 0.001003s"];
    "SourceFileLoader.get_filename" [color = "#dee4e5ff", label = "SourceFileLoader.get_filename\ncalls: 262\ntime: 0.000000s"];
    "SourceFileLoader.path_stats" [color = "#dee4e5ff", label = "SourceFileLoader.path_stats\ncalls: 262\ntime: 0.004995s"];
    "SourceFileLoader.get_data" [color = "#dee4e5ff", label = "SourceFileLoader.get_data\ncalls: 262\ntime: 0.020465s"];
    "_validate_bytecode_header" [color = "#dee4e5ff", label = "_validate_bytecode_header\ncalls: 262\ntime: 0.014161s"];
    "_r_long" [color = "#d7e2e5ff", label = "_r_long\ncalls: 524\ntime: 0.001005s"];
    "_compile_bytecode" [color = "#dee4e5ff", label = "_compile_bytecode\ncalls: 262\ntime: 0.014502s"];
    "_path_hooks" [color = "#e4e5e5ff", label = "_path_hooks\ncalls: 34\ntime: 0.007183s"];
    "path_hook_for_FileFinder" [color = "#e4e5e5ff", label = "path_hook_for_FileFinder\ncalls: 34\ntime: 0.005000s"];
    "_path_isdir" [color = "#e4e5e5ff", label = "_path_isdir\ncalls: 34\ntime: 0.001000s"];
    "FileFinder.__init__" [color = "#e4e5e5ff", label = "FileFinder.__init__\ncalls: 34\ntime: 0.001999s"];
    "<genexpr>" [color = "#c3d6e5ff", label = "<genexpr>\ncalls: 1,272\ntime: 0.000000s"];
    "FileFinder._fill_cache" [color = "#e4e5e5ff", label = "FileFinder._fill_cache\ncalls: 34\ntime: 0.007012s"];
    "<setcomp>" [color = "#e4e5e5ff", label = "<setcomp>\ncalls: 34\ntime: 0.000000s"];
    "_lock_unlock_module" [color = "#dce4e5ff", label = "_lock_unlock_module\ncalls: 347\ntime: 0.007176s"];
    "_installed_safely.__exit__" [color = "#dee4e5ff", label = "_installed_safely.__exit__\ncalls: 250\ntime: 0.011011s"];
    "ExtensionFileLoader.__init__" [color = "#e5e5e5ff", label = "ExtensionFileLoader.__init__\ncalls: 1\ntime: 0.000000s"];
    "_load" [color = "#e5e5e5ff", label = "_load\ncalls: 1\ntime: 0.022007s"];
    "ExtensionFileLoader.create_module" [color = "#e5e5e5ff", label = "ExtensionFileLoader.create_module\ncalls: 1\ntime: 0.020014s"];
    "ExtensionFileLoader.exec_module" [color = "#e5e5e5ff", label = "ExtensionFileLoader.exec_module\ncalls: 1\ntime: 0.000000s"];
    "<module>" [color = "#dfe5e5ff", label = "<module>\ncalls: 140\ntime: 0.161201s"];
    "FileAndLine" [color = "#e5e5e5ff", label = "FileAndLine\ncalls: 1\ntime: 0.000000s"];
    "ExportedApiAttributes" [color = "#e5e5e5ff", label = "ExportedApiAttributes\ncalls: 1\ntime: 0.000000s"];
    "__new__" [color = "#a6b1e5ff", label = "__new__\ncalls: 2,346\ntime: 0.003000s"];
    "DeprecatedArgSpec" [color = "#e5e5e5ff", label = "DeprecatedArgSpec\ncalls: 1\ntime: 0.000000s"];
    "ContextSwitch" [color = "#e5e5e5ff", label = "ContextSwitch\ncalls: 1\ntime: 0.000000s"];
    "LogicalDevice" [color = "#e5e5e5ff", label = "LogicalDevice\ncalls: 1\ntime: 0.000000s"];
    "VirtualDeviceConfiguration" [color = "#e5e5e5ff", label = "VirtualDeviceConfiguration\ncalls: 1\ntime: 0.000000s"];
    "PhysicalDevice" [color = "#e5e5e5ff", label = "PhysicalDevice\ncalls: 1\ntime: 0.000000s"];
    "_ParseTag" [color = "#e5e5e5ff", label = "_ParseTag\ncalls: 1\ntime: 0.000000s"];
    "spec_from_loader" [color = "#e5e5e5ff", label = "spec_from_loader\ncalls: 1\ntime: 0.002254s"];
    "type._requires_builtin_wrapper" [color = "#e5e5e5ff", label = "type._requires_builtin_wrapper\ncalls: 1\ntime: 0.001093s"];
    "is_package" [color = "#e5e5e5ff", label = "is_package\ncalls: 1\ntime: 0.000000s"];
    "type.create_module" [color = "#e5e5e5ff", label = "type.create_module\ncalls: 1\ntime: 0.000000s"];
    "type.exec_module" [color = "#e5e5e5ff", label = "type.exec_module\ncalls: 1\ntime: 0.000000s"];
    "IndexedSlicesValue" [color = "#e5e5e5ff", label = "IndexedSlicesValue\ncalls: 1\ntime: 0.000000s"];
    "SparseTensorValue" [color = "#e5e5e5ff", label = "SparseTensorValue\ncalls: 1\ntime: 0.000000s"];
    "BroadcastGradientArgs" [color = "#e5e5e5ff", label = "BroadcastGradientArgs\ncalls: 1\ntime: 0.000000s"];
    "FakeQuantWithMinMaxVarsGradient" [color = "#e5e5e5ff", label = "FakeQuantWithMinMaxVarsGradient\ncalls: 1\ntime: 0.000000s"];
    "FakeQuantWithMinMaxVarsPerChannelGradient" [color = "#e5e5e5ff", label = "FakeQuantWithMinMaxVarsPerChannelGradient\ncalls: 1\ntime: 0.000000s"];
    "ListDiff" [color = "#e5e5e5ff", label = "ListDiff\ncalls: 1\ntime: 0.000000s"];
    "QuantizeV2" [color = "#e5e5e5ff", label = "QuantizeV2\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConcat" [color = "#e5e5e5ff", label = "QuantizedConcat\ncalls: 1\ntime: 0.001005s"];
    "QuantizedInstanceNorm" [color = "#e5e5e5ff", label = "QuantizedInstanceNorm\ncalls: 1\ntime: 0.000000s"];
    "QuantizedReshape" [color = "#e5e5e5ff", label = "QuantizedReshape\ncalls: 1\ntime: 0.000000s"];
    "Unique" [color = "#e5e5e5ff", label = "Unique\ncalls: 1\ntime: 0.000000s"];
    "UniqueV2" [color = "#e5e5e5ff", label = "UniqueV2\ncalls: 1\ntime: 0.000000s"];
    "UniqueWithCounts" [color = "#e5e5e5ff", label = "UniqueWithCounts\ncalls: 1\ntime: 0.000000s"];
    "UniqueWithCountsV2" [color = "#e5e5e5ff", label = "UniqueWithCountsV2\ncalls: 1\ntime: 0.000000s"];
    "QuantizeDownAndShrinkRange" [color = "#e5e5e5ff", label = "QuantizeDownAndShrinkRange\ncalls: 1\ntime: 0.000000s"];
    "QuantizedAdd" [color = "#e5e5e5ff", label = "QuantizedAdd\ncalls: 1\ntime: 0.000000s"];
    "QuantizedMatMul" [color = "#e5e5e5ff", label = "QuantizedMatMul\ncalls: 1\ntime: 0.000000s"];
    "QuantizedMul" [color = "#e5e5e5ff", label = "QuantizedMul\ncalls: 1\ntime: 0.000000s"];
    "RequantizationRange" [color = "#e5e5e5ff", label = "RequantizationRange\ncalls: 1\ntime: 0.000000s"];
    "RequantizationRangePerChannel" [color = "#e5e5e5ff", label = "RequantizationRangePerChannel\ncalls: 1\ntime: 0.000000s"];
    "Requantize" [color = "#e5e5e5ff", label = "Requantize\ncalls: 1\ntime: 0.000000s"];
    "RequantizePerChannel" [color = "#e5e5e5ff", label = "RequantizePerChannel\ncalls: 1\ntime: 0.000000s"];
    "BarrierTakeMany" [color = "#e5e5e5ff", label = "BarrierTakeMany\ncalls: 1\ntime: 0.000000s"];
    "MapUnstageNoKey" [color = "#e5e5e5ff", label = "MapUnstageNoKey\ncalls: 1\ntime: 0.000000s"];
    "OrderedMapUnstageNoKey" [color = "#e5e5e5ff", label = "OrderedMapUnstageNoKey\ncalls: 1\ntime: 0.000000s"];
    "SparseAccumulatorTakeGradient" [color = "#e5e5e5ff", label = "SparseAccumulatorTakeGradient\ncalls: 1\ntime: 0.000000s"];
    "TensorArrayConcat" [color = "#e5e5e5ff", label = "TensorArrayConcat\ncalls: 1\ntime: 0.000000s"];
    "TensorArrayConcatV2" [color = "#e5e5e5ff", label = "TensorArrayConcatV2\ncalls: 1\ntime: 0.000000s"];
    "TensorArrayConcatV3" [color = "#e5e5e5ff", label = "TensorArrayConcatV3\ncalls: 1\ntime: 0.000000s"];
    "TensorArrayGradV3" [color = "#e5e5e5ff", label = "TensorArrayGradV3\ncalls: 1\ntime: 0.000000s"];
    "TensorArrayGradWithShape" [color = "#e5e5e5ff", label = "TensorArrayGradWithShape\ncalls: 1\ntime: 0.000000s"];
    "TensorArrayV3" [color = "#e5e5e5ff", label = "TensorArrayV3\ncalls: 1\ntime: 0.000000s"];
    "BatchNormWithGlobalNormalizationGrad" [color = "#e5e5e5ff", label = "BatchNormWithGlobalNormalizationGrad\ncalls: 1\ntime: 0.000000s"];
    "FractionalAvgPool" [color = "#e5e5e5ff", label = "FractionalAvgPool\ncalls: 1\ntime: 0.000000s"];
    "FractionalMaxPool" [color = "#e5e5e5ff", label = "FractionalMaxPool\ncalls: 1\ntime: 0.000000s"];
    "FusedBatchNorm" [color = "#e5e5e5ff", label = "FusedBatchNorm\ncalls: 1\ntime: 0.000000s"];
    "FusedBatchNormGrad" [color = "#e5e5e5ff", label = "FusedBatchNormGrad\ncalls: 1\ntime: 0.000000s"];
    "FusedBatchNormGradV2" [color = "#e5e5e5ff", label = "FusedBatchNormGradV2\ncalls: 1\ntime: 0.000000s"];
    "FusedBatchNormGradV3" [color = "#e5e5e5ff", label = "FusedBatchNormGradV3\ncalls: 1\ntime: 0.000000s"];
    "FusedBatchNormV2" [color = "#e5e5e5ff", label = "FusedBatchNormV2\ncalls: 1\ntime: 0.000000s"];
    "FusedBatchNormV3" [color = "#e5e5e5ff", label = "FusedBatchNormV3\ncalls: 1\ntime: 0.000000s"];
    "MaxPoolWithArgmax" [color = "#e5e5e5ff", label = "MaxPoolWithArgmax\ncalls: 1\ntime: 0.000000s"];
    "QuantizedAvgPool" [color = "#e5e5e5ff", label = "QuantizedAvgPool\ncalls: 1\ntime: 0.000000s"];
    "QuantizedBatchNormWithGlobalNormalization" [color = "#e5e5e5ff", label = "QuantizedBatchNormWithGlobalNormalization\ncalls: 1\ntime: 0.000000s"];
    "QuantizedBiasAdd" [color = "#e5e5e5ff", label = "QuantizedBiasAdd\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2D" [color = "#e5e5e5ff", label = "QuantizedConv2D\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DAndRelu" [color = "#e5e5e5ff", label = "QuantizedConv2DAndRelu\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DAndReluAndRequantize" [color = "#e5e5e5ff", label = "QuantizedConv2DAndReluAndRequantize\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DAndRequantize" [color = "#e5e5e5ff", label = "QuantizedConv2DAndRequantize\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DPerChannel" [color = "#e5e5e5ff", label = "QuantizedConv2DPerChannel\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DWithBias" [color = "#e5e5e5ff", label = "QuantizedConv2DWithBias\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DWithBiasAndRelu" [color = "#e5e5e5ff", label = "QuantizedConv2DWithBiasAndRelu\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DWithBiasAndReluAndRequantize" [color = "#e5e5e5ff", label = "QuantizedConv2DWithBiasAndReluAndRequantize\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DWithBiasAndRequantize" [color = "#e5e5e5ff", label = "QuantizedConv2DWithBiasAndRequantize\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DWithBiasSignedSumAndReluAndRequantize" [color = "#e5e5e5ff", label = "QuantizedConv2DWithBiasSignedSumAndReluAndRequantize\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DWithBiasSumAndRelu" [color = "#e5e5e5ff", label = "QuantizedConv2DWithBiasSumAndRelu\ncalls: 1\ntime: 0.000000s"];
    "QuantizedConv2DWithBiasSumAndReluAndRequantize" [color = "#e5e5e5ff", label = "QuantizedConv2DWithBiasSumAndReluAndRequantize\ncalls: 1\ntime: 0.000000s"];
    "QuantizedDepthwiseConv2D" [color = "#e5e5e5ff", label = "QuantizedDepthwiseConv2D\ncalls: 1\ntime: 0.000000s"];
    "QuantizedDepthwiseConv2DWithBias" [color = "#e5e5e5ff", label = "QuantizedDepthwiseConv2DWithBias\ncalls: 1\ntime: 0.000000s"];
    "QuantizedDepthwiseConv2DWithBiasAndRelu" [color = "#e5e5e5ff", label = "QuantizedDepthwiseConv2DWithBiasAndRelu\ncalls: 1\ntime: 0.000000s"];
    "QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize" [color = "#e5e5e5ff", label = "QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize\ncalls: 1\ntime: 0.000000s"];
    "QuantizedMaxPool" [color = "#e5e5e5ff", label = "QuantizedMaxPool\ncalls: 1\ntime: 0.000000s"];
    "QuantizedRelu" [color = "#e5e5e5ff", label = "QuantizedRelu\ncalls: 1\ntime: 0.000000s"];
    "QuantizedRelu6" [color = "#e5e5e5ff", label = "QuantizedRelu6\ncalls: 1\ntime: 0.000000s"];
    "QuantizedReluX" [color = "#e5e5e5ff", label = "QuantizedReluX\ncalls: 1\ntime: 0.000000s"];
    "SoftmaxCrossEntropyWithLogits" [color = "#e5e5e5ff", label = "SoftmaxCrossEntropyWithLogits\ncalls: 1\ntime: 0.000000s"];
    "SparseSoftmaxCrossEntropyWithLogits" [color = "#e5e5e5ff", label = "SparseSoftmaxCrossEntropyWithLogits\ncalls: 1\ntime: 0.000000s"];
    "TopK" [color = "#e5e5e5ff", label = "TopK\ncalls: 1\ntime: 0.000000s"];
    "TopKV2" [color = "#e5e5e5ff", label = "TopKV2\ncalls: 1\ntime: 0.000000s"];
    "DeserializeManySparse" [color = "#e5e5e5ff", label = "DeserializeManySparse\ncalls: 1\ntime: 0.000000s"];
    "DeserializeSparse" [color = "#e5e5e5ff", label = "DeserializeSparse\ncalls: 1\ntime: 0.000000s"];
    "SparseAdd" [color = "#e5e5e5ff", label = "SparseAdd\ncalls: 1\ntime: 0.000000s"];
    "SparseAddGrad" [color = "#e5e5e5ff", label = "SparseAddGrad\ncalls: 1\ntime: 0.000000s"];
    "SparseConcat" [color = "#e5e5e5ff", label = "SparseConcat\ncalls: 1\ntime: 0.000000s"];
    "SparseCross" [color = "#e5e5e5ff", label = "SparseCross\ncalls: 1\ntime: 0.000000s"];
    "SparseFillEmptyRows" [color = "#e5e5e5ff", label = "SparseFillEmptyRows\ncalls: 1\ntime: 0.000000s"];
    "SparseFillEmptyRowsGrad" [color = "#e5e5e5ff", label = "SparseFillEmptyRowsGrad\ncalls: 1\ntime: 0.000000s"];
    "SparseReduceMaxSparse" [color = "#e5e5e5ff", label = "SparseReduceMaxSparse\ncalls: 1\ntime: 0.000000s"];
    "SparseReduceSumSparse" [color = "#e5e5e5ff", label = "SparseReduceSumSparse\ncalls: 1\ntime: 0.000000s"];
    "SparseReorder" [color = "#e5e5e5ff", label = "SparseReorder\ncalls: 1\ntime: 0.000000s"];
    "SparseReshape" [color = "#e5e5e5ff", label = "SparseReshape\ncalls: 1\ntime: 0.000000s"];
    "SparseSlice" [color = "#e5e5e5ff", label = "SparseSlice\ncalls: 1\ntime: 0.000000s"];
    "SparseSparseMaximum" [color = "#e5e5e5ff", label = "SparseSparseMaximum\ncalls: 1\ntime: 0.000000s"];
    "SparseSparseMinimum" [color = "#e5e5e5ff", label = "SparseSparseMinimum\ncalls: 1\ntime: 0.000000s"];
    "SparseSplit" [color = "#e5e5e5ff", label = "SparseSplit\ncalls: 1\ntime: 0.000000s"];
    "TakeManySparseFromTensorsMap" [color = "#e5e5e5ff", label = "TakeManySparseFromTensorsMap\ncalls: 1\ntime: 0.000000s"];
    "Merge" [color = "#e5e5e5ff", label = "Merge\ncalls: 1\ntime: 0.000000s"];
    "RefMerge" [color = "#e5e5e5ff", label = "RefMerge\ncalls: 1\ntime: 0.000000s"];
    "RefSwitch" [color = "#e5e5e5ff", label = "RefSwitch\ncalls: 1\ntime: 0.000000s"];
    "Switch" [color = "#e5e5e5ff", label = "Switch\ncalls: 1\ntime: 0.000000s"];
    "TensorListConcat" [color = "#e5e5e5ff", label = "TensorListConcat\ncalls: 1\ntime: 0.000000s"];
    "TensorListConcatV2" [color = "#e5e5e5ff", label = "TensorListConcatV2\ncalls: 1\ntime: 0.000000s"];
    "TensorListPopBack" [color = "#e5e5e5ff", label = "TensorListPopBack\ncalls: 1\ntime: 0.000000s"];
    "ReaderRead" [color = "#e5e5e5ff", label = "ReaderRead\ncalls: 1\ntime: 0.000000s"];
    "ReaderReadUpTo" [color = "#e5e5e5ff", label = "ReaderReadUpTo\ncalls: 1\ntime: 0.000000s"];
    "ReaderReadUpToV2" [color = "#e5e5e5ff", label = "ReaderReadUpToV2\ncalls: 1\ntime: 0.000000s"];
    "ReaderReadV2" [color = "#e5e5e5ff", label = "ReaderReadV2\ncalls: 1\ntime: 0.000000s"];
    "TrackableReference" [color = "#e5e5e5ff", label = "TrackableReference\ncalls: 1\ntime: 0.000000s"];
    "_DeferredSlotVariableRestoration" [color = "#e5e5e5ff", label = "_DeferredSlotVariableRestoration\ncalls: 1\ntime: 0.000000s"];
    "_SlotVariableRestoration" [color = "#e5e5e5ff", label = "_SlotVariableRestoration\ncalls: 1\ntime: 0.000000s"];
    "BatchSelfAdjointEigV2" [color = "#e5e5e5ff", label = "BatchSelfAdjointEigV2\ncalls: 1\ntime: 0.000000s"];
    "BatchSvd" [color = "#e5e5e5ff", label = "BatchSvd\ncalls: 1\ntime: 0.000000s"];
    "LogMatrixDeterminant" [color = "#e5e5e5ff", label = "LogMatrixDeterminant\ncalls: 1\ntime: 0.000000s"];
    "Lu" [color = "#e5e5e5ff", label = "Lu\ncalls: 1\ntime: 0.000000s"];
    "Qr" [color = "#e5e5e5ff", label = "Qr\ncalls: 1\ntime: 0.000000s"];
    "SelfAdjointEigV2" [color = "#e5e5e5ff", label = "SelfAdjointEigV2\ncalls: 1\ntime: 0.000000s"];
    "Svd" [color = "#e5e5e5ff", label = "Svd\ncalls: 1\ntime: 0.000000s"];
    "VSpace" [color = "#e5e5e5ff", label = "VSpace\ncalls: 1\ntime: 0.000000s"];
    "MatchDType" [color = "#e5e5e5ff", label = "MatchDType\ncalls: 1\ntime: 0.000000s"];
    "ParseExample" [color = "#e5e5e5ff", label = "ParseExample\ncalls: 1\ntime: 0.000000s"];
    "ParseSequenceExample" [color = "#e5e5e5ff", label = "ParseSequenceExample\ncalls: 1\ntime: 0.000000s"];
    "ParseSingleExample" [color = "#e5e5e5ff", label = "ParseSingleExample\ncalls: 1\ntime: 0.000000s"];
    "ParseSingleSequenceExample" [color = "#e5e5e5ff", label = "ParseSingleSequenceExample\ncalls: 1\ntime: 0.000000s"];
    "StringSplit" [color = "#e5e5e5ff", label = "StringSplit\ncalls: 1\ntime: 0.000000s"];
    "StringSplitV2" [color = "#e5e5e5ff", label = "StringSplitV2\ncalls: 1\ntime: 0.000000s"];
    "UnicodeDecode" [color = "#e5e5e5ff", label = "UnicodeDecode\ncalls: 1\ntime: 0.000000s"];
    "UnicodeDecodeWithOffsets" [color = "#e5e5e5ff", label = "UnicodeDecodeWithOffsets\ncalls: 1\ntime: 0.000000s"];
    "TraceContext" [color = "#e5e5e5ff", label = "TraceContext\ncalls: 1\ntime: 0.000000s"];
    "RaggedTensorFromVariant" [color = "#e5e5e5ff", label = "RaggedTensorFromVariant\ncalls: 1\ntime: 0.000000s"];
    "RaggedTensorToSparse" [color = "#e5e5e5ff", label = "RaggedTensorToSparse\ncalls: 1\ntime: 0.000000s"];
    "RaggedRange" [color = "#e5e5e5ff", label = "RaggedRange\ncalls: 1\ntime: 0.000000s"];
    "RaggedGather" [color = "#e5e5e5ff", label = "RaggedGather\ncalls: 1\ntime: 0.000000s"];
    "VarLenFeature" [color = "#e5e5e5ff", label = "VarLenFeature\ncalls: 1\ntime: 0.000000s"];
    "SparseFeature" [color = "#e5e5e5ff", label = "SparseFeature\ncalls: 1\ntime: 0.000000s"];
    "FixedLenFeature" [color = "#e5e5e5ff", label = "FixedLenFeature\ncalls: 1\ntime: 0.000000s"];
    "FixedLenSequenceFeature" [color = "#e5e5e5ff", label = "FixedLenSequenceFeature\ncalls: 1\ntime: 0.000000s"];
    "ArgInfo" [color = "#e5e5e5ff", label = "ArgInfo\ncalls: 1\ntime: 0.000000s"];
    "_RaggedTensorComponents" [color = "#e5e5e5ff", label = "_RaggedTensorComponents\ncalls: 1\ntime: 0.000000s"];
    "AnonymousIteratorV2" [color = "#e5e5e5ff", label = "AnonymousIteratorV2\ncalls: 1\ntime: 0.000000s"];
    "CacheKey" [color = "#e5e5e5ff", label = "CacheKey\ncalls: 1\ntime: 0.000000s"];
    "_InputMutation" [color = "#e5e5e5ff", label = "_InputMutation\ncalls: 1\ntime: 0.000000s"];
    "_ControlMutation" [color = "#e5e5e5ff", label = "_ControlMutation\ncalls: 1\ntime: 0.000000s"];

    // Edges
    "__main__" -> "main" [color = "#b2b2b2ff", label = "1"];
    "main" -> "utils.get_exp_data_path.get_exp_data_path" [color = "#b2b2b2ff", label = "1"];
    "main" -> "utils.Logger.Logger.__init__" [color = "#b2b2b2ff", label = "1"];
    "utils.Logger.Logger.__init__" -> "utils.Logger.<listcomp>" [color = "#b2b2b2ff", label = "1"];
    "_handle_fromlist" -> "_call_with_frames_removed" [color = "#b237aaff", label = "195"];
    "_call_with_frames_removed" -> "_find_and_load" [color = "#7b65b2ff", label = "209"];
    "_call_with_frames_removed" -> "_lock_unlock_module" [color = "#aeb2b2ff", label = "195"];
    "_find_and_load" -> "_ModuleLockManager.__init__" [color = "#acb1b2ff", label = "269"];
    "_find_and_load" -> "_ModuleLockManager.__enter__" [color = "#acb1b2ff", label = "269"];
    "_find_and_load" -> "_find_and_load_unlocked" [color = "#7c64b2ff", label = "269"];
    "_find_and_load" -> "_ModuleLockManager.__exit__" [color = "#adb2b2ff", label = "253"];
    "_find_and_load" -> "cb" [color = "#adb2b2ff", label = "252"];
    "_ModuleLockManager.__enter__" -> "_get_module_lock" [color = "#acb1b2ff", label = "270"];
    "_ModuleLockManager.__enter__" -> "_ModuleLock.acquire" [color = "#acb1b2ff", label = "270"];
    "_get_module_lock" -> "_ModuleLock.__init__" [color = "#acb1b2ff", label = "268"];
    "_find_and_load_unlocked" -> "_find_spec" [color = "#abb1b2ff", label = "267"];
    "_find_and_load_unlocked" -> "_load_unlocked" [color = "#7b66b2ff", label = "263"];
    "_find_and_load_unlocked" -> "_call_with_frames_removed" [color = "#b23bb1ff", label = "13"];
    "_find_spec" -> "_ImportLockContext.__enter__" [color = "#a1adb2ff", label = "803"];
    "_find_spec" -> "find_spec" [color = "#a0adb2ff", label = "799"];
    "_find_spec" -> "_ImportLockContext.__exit__" [color = "#a1adb2ff", label = "803"];
    "_find_spec" -> "_find_spec_legacy" [color = "#b2b2b2ff", label = "4"];
    "find_spec" -> "_get_spec" [color = "#acb1b2ff", label = "266"];
    "find_spec" -> "spec_from_loader" [color = "#b2b2b2ff", label = "1"];
    "_get_spec" -> "_path_importer_cache" [color = "#acb1b2ff", label = "299"];
    "_get_spec" -> "FileFinder.find_spec" [color = "#abb1b2ff", label = "284"];
    "_get_spec" -> "ModuleSpec.__init__" [color = "#b2b2b2ff", label = "4"];
    "FileFinder.find_spec" -> "_path_stat" [color = "#acb1b2ff", label = "284"];
    "FileFinder.find_spec" -> "_relax_case" [color = "#acb1b2ff", label = "284"];
    "FileFinder.find_spec" -> "_path_join" [color = "#9eacb2ff", label = "930"];
    "FileFinder.find_spec" -> "_verbose_message" [color = "#a1adb2ff", label = "794"];
    "FileFinder.find_spec" -> "_path_isfile" [color = "#abb1b2ff", label = "330"];
    "FileFinder.find_spec" -> "FileFinder._get_spec" [color = "#acb1b2ff", label = "262"];
    "FileFinder.find_spec" -> "FileFinder._fill_cache" [color = "#b1b2b2ff", label = "34"];
    "_path_join" -> "<listcomp>" [color = "#94a3b2ff", label = "1454"];
    "_ModuleLockManager.__exit__" -> "_ModuleLock.release" [color = "#adb2b2ff", label = "254"];
    "_path_isfile" -> "_path_is_mode_type" [color = "#abb1b2ff", label = "330"];
    "_path_is_mode_type" -> "_path_stat" [color = "#aab1b2ff", label = "364"];
    "FileFinder._get_spec" -> "SourceFileLoader.__init__" [color = "#adb1b2ff", label = "262"];
    "FileFinder._get_spec" -> "spec_from_file_location" [color = "#acb1b2ff", label = "262"];
    "spec_from_file_location" -> "ModuleSpec.__init__" [color = "#adb1b2ff", label = "262"];
    "_load_unlocked" -> "module_from_spec" [color = "#acb1b2ff", label = "264"];
    "_load_unlocked" -> "_installed_safely.__init__" [color = "#acb1b2ff", label = "264"];
    "_load_unlocked" -> "_installed_safely.__enter__" [color = "#acb1b2ff", label = "264"];
    "_load_unlocked" -> "SourceFileLoader.exec_module" [color = "#7b66b2ff", label = "262"];
    "_load_unlocked" -> "_installed_safely.__exit__" [color = "#adb2b2ff", label = "250"];
    "_load_unlocked" -> "ExtensionFileLoader.exec_module" [color = "#b2b2b2ff", label = "1"];
    "_load_unlocked" -> "type.exec_module" [color = "#b2b2b2ff", label = "1"];
    "module_from_spec" -> "SourceFileLoader.create_module" [color = "#adb1b2ff", label = "262"];
    "module_from_spec" -> "_new_module" [color = "#adb1b2ff", label = "262"];
    "module_from_spec" -> "_init_module_attrs" [color = "#acb1b2ff", label = "264"];
    "module_from_spec" -> "ExtensionFileLoader.create_module" [color = "#b2b2b2ff", label = "1"];
    "module_from_spec" -> "type.create_module" [color = "#b2b2b2ff", label = "1"];
    "_init_module_attrs" -> "ModuleSpec.parent" [color = "#acb1b2ff", label = "264"];
    "_init_module_attrs" -> "ModuleSpec.has_location" [color = "#acb1b2ff", label = "264"];
    "_init_module_attrs" -> "ModuleSpec.cached" [color = "#a7b0b2ff", label = "524"];
    "ModuleSpec.cached" -> "_get_cached" [color = "#acb1b2ff", label = "262"];
    "_get_cached" -> "cache_from_source" [color = "#acb1b2ff", label = "262"];
    "cache_from_source" -> "_path_split" [color = "#a7b0b2ff", label = "524"];
    "cache_from_source" -> "_path_join" [color = "#a7b0b2ff", label = "524"];
    "SourceFileLoader.exec_module" -> "SourceFileLoader.get_code" [color = "#acb1b2ff", label = "262"];
    "SourceFileLoader.exec_module" -> "_call_with_frames_removed" [color = "#b236a7ff", label = "262"];
    "SourceFileLoader.get_code" -> "SourceFileLoader._check_name_wrapper" [color = "#adb1b2ff", label = "262"];
    "SourceFileLoader.get_code" -> "cache_from_source" [color = "#acb1b2ff", label = "262"];
    "SourceFileLoader.get_code" -> "SourceFileLoader.path_stats" [color = "#acb1b2ff", label = "262"];
    "SourceFileLoader.get_code" -> "SourceFileLoader.get_data" [color = "#acb1b2ff", label = "262"];
    "SourceFileLoader.get_code" -> "_validate_bytecode_header" [color = "#acb1b2ff", label = "262"];
    "SourceFileLoader.get_code" -> "_verbose_message" [color = "#adb1b2ff", label = "262"];
    "SourceFileLoader.get_code" -> "_compile_bytecode" [color = "#acb1b2ff", label = "262"];
    "SourceFileLoader._check_name_wrapper" -> "SourceFileLoader.get_filename" [color = "#adb1b2ff", label = "262"];
    "SourceFileLoader.path_stats" -> "_path_stat" [color = "#acb1b2ff", label = "262"];
    "_validate_bytecode_header" -> "_r_long" [color = "#a7b0b2ff", label = "524"];
    "_compile_bytecode" -> "_verbose_message" [color = "#adb1b2ff", label = "262"];
    "_path_importer_cache" -> "_path_hooks" [color = "#b1b2b2ff", label = "34"];
    "_path_hooks" -> "path_hook_for_FileFinder" [color = "#b1b2b2ff", label = "34"];
    "path_hook_for_FileFinder" -> "_path_isdir" [color = "#b1b2b2ff", label = "34"];
    "path_hook_for_FileFinder" -> "FileFinder.__init__" [color = "#b1b2b2ff", label = "34"];
    "_path_isdir" -> "_path_is_mode_type" [color = "#b1b2b2ff", label = "34"];
    "FileFinder.__init__" -> "<genexpr>" [color = "#acb1b2ff", label = "272"];
    "FileFinder._fill_cache" -> "<setcomp>" [color = "#b1b2b2ff", label = "34"];
    "_lock_unlock_module" -> "_get_module_lock" [color = "#abb1b2ff", label = "347"];
    "_lock_unlock_module" -> "_ModuleLock.acquire" [color = "#abb1b2ff", label = "347"];
    "_lock_unlock_module" -> "_ModuleLock.release" [color = "#abb1b2ff", label = "347"];
    "_installed_safely.__exit__" -> "<genexpr>" [color = "#9dabb2ff", label = "1000"];
    "_installed_safely.__exit__" -> "_verbose_message" [color = "#adb2b2ff", label = "250"];
    "_load" -> "_ModuleLockManager.__init__" [color = "#b2b2b2ff", label = "1"];
    "_load" -> "_ModuleLockManager.__enter__" [color = "#b2b2b2ff", label = "1"];
    "_load" -> "_load_unlocked" [color = "#796bb2ff", label = "1"];
    "_load" -> "_ModuleLockManager.__exit__" [color = "#b2b2b2ff", label = "1"];
    "_load" -> "cb" [color = "#b2b2b2ff", label = "1"];
    "ExtensionFileLoader.create_module" -> "_call_with_frames_removed" [color = "#b23bb2ff", label = "1"];
    "ExtensionFileLoader.create_module" -> "_verbose_message" [color = "#b2b2b2ff", label = "1"];
    "ExtensionFileLoader.exec_module" -> "_call_with_frames_removed" [color = "#b23bb2ff", label = "1"];
    "ExtensionFileLoader.exec_module" -> "_verbose_message" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_handle_fromlist" [color = "#7879b2ff", label = "420"];
    "<module>" -> "FileAndLine" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ExportedApiAttributes" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "DeprecatedArgSpec" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ContextSwitch" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "LogicalDevice" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "VirtualDeviceConfiguration" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "PhysicalDevice" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_ParseTag" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "IndexedSlicesValue" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseTensorValue" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "BroadcastGradientArgs" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FakeQuantWithMinMaxVarsGradient" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FakeQuantWithMinMaxVarsPerChannelGradient" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ListDiff" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizeV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConcat" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedInstanceNorm" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedReshape" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Unique" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "UniqueV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "UniqueWithCounts" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "UniqueWithCountsV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizeDownAndShrinkRange" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedAdd" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedMatMul" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedMul" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RequantizationRange" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RequantizationRangePerChannel" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Requantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RequantizePerChannel" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "BarrierTakeMany" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "MapUnstageNoKey" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "OrderedMapUnstageNoKey" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseAccumulatorTakeGradient" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorArrayConcat" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorArrayConcatV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorArrayConcatV3" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorArrayGradV3" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorArrayGradWithShape" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorArrayV3" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "BatchNormWithGlobalNormalizationGrad" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FractionalAvgPool" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FractionalMaxPool" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FusedBatchNorm" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FusedBatchNormGrad" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FusedBatchNormGradV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FusedBatchNormGradV3" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FusedBatchNormV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FusedBatchNormV3" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "MaxPoolWithArgmax" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedAvgPool" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedBatchNormWithGlobalNormalization" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedBiasAdd" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2D" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DAndRelu" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DAndReluAndRequantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DAndRequantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DPerChannel" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DWithBias" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DWithBiasAndRelu" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DWithBiasAndReluAndRequantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DWithBiasAndRequantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DWithBiasSignedSumAndReluAndRequantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DWithBiasSumAndRelu" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedConv2DWithBiasSumAndReluAndRequantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedDepthwiseConv2D" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedDepthwiseConv2DWithBias" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedDepthwiseConv2DWithBiasAndRelu" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedMaxPool" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedRelu" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedRelu6" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "QuantizedReluX" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SoftmaxCrossEntropyWithLogits" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseSoftmaxCrossEntropyWithLogits" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TopK" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TopKV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "DeserializeManySparse" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "DeserializeSparse" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseAdd" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseAddGrad" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseConcat" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseCross" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseFillEmptyRows" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseFillEmptyRowsGrad" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseReduceMaxSparse" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseReduceSumSparse" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseReorder" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseReshape" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseSlice" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseSparseMaximum" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseSparseMinimum" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseSplit" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TakeManySparseFromTensorsMap" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Merge" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RefMerge" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RefSwitch" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Switch" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorListConcat" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorListConcatV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TensorListPopBack" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ReaderRead" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ReaderReadUpTo" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ReaderReadUpToV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ReaderReadV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TrackableReference" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_DeferredSlotVariableRestoration" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_SlotVariableRestoration" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "BatchSelfAdjointEigV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "BatchSvd" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "LogMatrixDeterminant" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Lu" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Qr" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SelfAdjointEigV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Svd" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "VSpace" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "MatchDType" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ParseExample" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ParseSequenceExample" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ParseSingleExample" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ParseSingleSequenceExample" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "StringSplit" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "StringSplitV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "UnicodeDecode" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "UnicodeDecodeWithOffsets" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TraceContext" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RaggedTensorFromVariant" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RaggedTensorToSparse" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RaggedRange" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RaggedGather" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "VarLenFeature" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "SparseFeature" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FixedLenFeature" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "FixedLenSequenceFeature" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ArgInfo" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_RaggedTensorComponents" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "AnonymousIteratorV2" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "CacheKey" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_InputMutation" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "_ControlMutation" [color = "#b2b2b2ff", label = "1"];
    "spec_from_loader" -> "type._requires_builtin_wrapper" [color = "#b2b2b2ff", label = "1"];
    "spec_from_loader" -> "ModuleSpec.__init__" [color = "#b2b2b2ff", label = "1"];
    "type._requires_builtin_wrapper" -> "is_package" [color = "#b2b2b2ff", label = "1"];
    "type.create_module" -> "_call_with_frames_removed" [color = "#b23bb2ff", label = "1"];
    "type.exec_module" -> "_call_with_frames_removed" [color = "#b23bb2ff", label = "1"];

}
